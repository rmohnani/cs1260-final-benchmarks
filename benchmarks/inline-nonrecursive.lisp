(define (max x y) (if (< x y) y x))
(define (min x y) (if (< x y) x y))
(define (abs x) (if (< x 0) (- 0 x) x))

(define (max-list lst)
  (if (empty? (right lst))
    (left lst)
    (max (left lst) (max-list (right lst)))
  )
)

(define (min-list lst)
  (if (empty? (right lst))
    (left lst)
    (min (left lst) (min-list (right lst)))
  )
)

(define (abs-list lst)
  (if (empty? lst)
    ()
    (pair (abs (left lst)) (abs-list (right lst)))
  )
)

(let ((lst (pair 1 (pair -15 (pair -100 (pair 24 (pair 97 ())))))))
  (do
    (print (max-list lst))
    (newline)
    (print (min-list lst))
    (newline)
    (print (abs-list lst))
  )
)